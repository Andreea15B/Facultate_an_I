volum_elipsoid_de_revolutie(50000)
volum_elipsoid_de_revolutie=function(N)
{
N_C=0;
for(i in 1:N)
{
x=runif(1,-2,2);
y=runif(1,-3,3);
z=runif(1,-4,4);
if((x*x/4)+(y*y/9)+(z*z/16)<=1) N_C=N_C+1;
}
return (8*6*4*N_C/N);
}
volum_elipsoid_de_revolutie(10000)
volum_elipsoid_de_revolutie(20000)
volum_elipsoid_de_revolutie(50000)
integration_a=function(N)
{
s=0;
for(i in 1:N)
{
u=runif(1,0,1);
si=sin(20*u);
co=cos(50*u);
s=s+(co+si)*(co+si);
}
return (s/N);
}
integration_a(10000)
integration_b=function(N)
{
s=0;
for(i in 1:N)
{
x=runif(1,0,3);
s=s+(x^3)/(x^4+1);
}
return (3*s/N);
}
integration_b(10000)
integration_b(20000)
integration_b(50000)
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi(10000)
# (a) Estimati probabilitatea ca fiecare cont sa fie infectat cel putin o data.
# (b) Estimati probabilitatea ca intr-o anumita zi toate conturile sa fie infectate.
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# (a) Estimati probabilitatea ca fiecare cont sa fie infectat cel putin o data.
# (b) Estimati probabilitatea ca intr-o anumita zi toate conturile sa fie infectate.
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
estimated_error_probability=function(p,pr,epsilon)
{
alfa=1-pr;
z=qnorm(alfa/2);
N_min=(1-p)*p*(z/epsilon)^2;
print(N_min);
}
conturi()
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20)
sum=sum+1;
}
return (sum/N);
}
conturi()
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
conturi()
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
conturi()
# (b) Estimati probabilitatea ca intr-o anumita zi toate conturile sa fie infectate.
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
conturi()
# (c) Cat de mare trebuie sa fie numarul de simulari - adica dimensiunea esantionului - astfel ca prima
# probabilitate sa aiba o eroare de cel mult ±0.01 cu probabilitatea 0.99? Gasiti o astfel de estimare.
conturi = function()
{
nr_days=1;
p=0.25;
nr=19;
nr=nr-rbinom(1, 19, 0.25);
print(nr);
while(nr>0 & nr<20)
{
nr_days=nr_days+1;
p=1-0.75^(20-nr);
c=rbinom(1, nr, p);
nr=nr-c+5;
}
return (nr);
}
toateconturile=function(N)
{
sum=0;
for(i in 1:N)
{
if(conturi()>=20) sum=sum+1;
}
return (sum/N);
}
toateconturile(10)
setwd("D:/Facultate/Semestru II/PS/Statistică/Tema lab4")
