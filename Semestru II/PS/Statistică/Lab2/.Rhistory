# File -> New File -> R Script
# File -> New File -> Text File
# Session -> Set Working Directory -> To Source File Location/Choose Directory
# Ex I.1
x = scan ("sample1.txt")
stem(x)
# Ex I.1
x = scan ("sample1.txt")
stem(x)
setwd("D:/Laboratoare PS/Lab2")
# Ex I.1
x = scan ("sample1.txt")
stem(x)
# Ex I.2
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
## Ex I.2
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
rate = x[['rate']]
hist(rate, breaks = c(0,4,6,8,10,12,14,30), right = T, freq = T, col = red)
## Ex I.2
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
rate = x[['rate']]
hist(rate, breaks=c(0,4,6,8,10,12,14,30), right = T, freq = T, col = 'red')
## Ex I.2
x = read.csv ("unemploy2012.csv", header = T, sep = ';')
rate = x[['rate']]
hist(rate, breaks=c(0,4,6,8,10,12,14,30), right = T, freq = F, col = 'red')
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
hist(male, female, breaks = 7, right = T, freq = T)
## Ex I.3
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
hist(male, breaks = 7, right = T, freq = T)
hist(female, breaks = 7, right = T, freq = T)
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
hist(male, breaks = 7, right = T, freq = T, col = 'red')
hist(female, breaks = 7, right = T, freq = T, col = 'blue')
male = x[['male']]
female = x[['female']]
hist(male, breaks = 7, right = F, freq = F, col = 'red')
hist(female, breaks = 7, right = F, freq = F, col = 'blue')
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
hist(male, breaks = 7, right = T, freq = T, col = 'red')
hist(female, breaks = 7, right = T, freq = T, col = 'blue')
x = scan("sample1.txt")
mean(x) #medie
median(x) #mediana
x = read.csv ("life_expect.csv", header = T, sep = ',')
mean(x) #medie
median(x) #mediana
## Ex II.2
x = scan("life_expect.csv")
female = x[['female']]
## Ex II.2
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
mean(x) #medie
median(x) #mediana
## Ex II.2
x = read.csv ("life_expect.csv", header = T, sep = ',')
male = x[['male']]
female = x[['female']]
mean(male) #medie
median(male) #mediana
# x nu apartine [ M-2*s, M+2*s] -> x = valoarea aberanta
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
}
rez
outliers_mean(sample)
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = c(1, 91, 38, 72, 13, 27, 11, 19, 5, 22, 20, 19, 8, 17, 11, 15, 13, 23, 14, 17)
outliers_mean(sample)
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
}
sample = c(1, 91, 38, 72, 13, 27, 11, 19, 5, 22, 20, 19, 8, 17, 11, 15, 13, 23, 14, 17)
outliers_mean(sample)
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
}
sample = c(1, 91, 38, 72, 13, 27, 11, 19, 5, 22, 20, 19, 8, 17, 11, 15, 13, 23, 14, 17)
outliers_mean(sample)
rez
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = c(1, 91, 38, 72, 13, 27, 11, 19, 5, 22, 20, 19, 8, 17, 11, 15, 13, 23, 14, 17)
outliers_mean(sample)
j = j+1
# x nu apartine [ M-2*s, M+2*s] -> x = valoarea aberanta
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = c(1, 91, 38, 72, 13, 27, 11, 19, 5, 22, 20, 19, 8, 17, 11, 15, 13, 23, 14, 17)
outliers_mean(sample)
## Ex III.1 Valori aberante
# x nu apartine [ M-2*s, M+2*s] -> x = valoarea aberanta
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample1.txt")
outliers_mean(sample)
## Ex III.1 Valori aberante
# x nu apartine [ M-2*s, M+2*s] -> x = valoarea aberanta
outliers_mean = function(x) {
j = 0;
m = mean(x)
s = sd(x)
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= m-2*s | x[i] >= m+2*s) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_mean(sample)
# x nu apartine [Q1 - 1,5*IQR, Q3+1,5*IQR] -> x valoare aberanta
x = scan("sample1.txt")
summary()
x = scan("sample1.txt")
summary()
x = scan("sample1.txt")
summary(x)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1,5*IQR | x[i] >= q1+1,5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1,5*IQR | x[i] >= q3+1,5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
x = scan("sample1.txt")
summary(x)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1,5*IQR | x[i] >= q3+1,5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
x = scan("sample1.txt")
summary(x)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1.5*IQR | x[i] >= q3+1.5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1.5*IQR | x[i] >= q3+1.5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample1.txt")
outliers_iqr(sample)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1.5*IQR | x[i] >= q3+1.5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
## Ex III.1 Valori aberante b)
# IQR = Q3 - Q1 (interval interquartilic)
# x nu apartine [Q1 - 1,5*IQR, Q3+1,5*IQR] -> x valoare aberanta
x = scan("sample1.txt")
summary(x)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 0:length(x)) {
if (x[i] <= q1-1.5*IQR | x[i] >= q3+1.5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
outliers_iqr = function(x) {
j = 0
y = summary(x)
q1 = y[2]
q3 = y[5]
IQR = q3-q1
rez = vector()
for(i in 1:length(x)) {
if (x[i] <= q1-1.5*IQR | x[i] >= q3+1.5*IQR) {
j = j+1
rez[j] = x[i]
}
}
rez
}
sample = scan("sample2.txt")
outliers_iqr(sample)
